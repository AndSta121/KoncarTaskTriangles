// <auto-generated />
using KoncarTaskTriangles.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoncarTaskTriangles.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("KoncarTaskTriangles.Models.TriangleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Area")
                        .HasColumnType("REAL");

                    b.Property<int>("Ax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bx")
                        .HasColumnType("INTEGER");

                    b.Property<int>("By")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cx")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cy")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Perimeter")
                        .HasColumnType("REAL");

                    b.Property<string>("TypeByAngle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeBySideLength")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Triangles");
                });

            modelBuilder.Entity("KoncarTaskTriangles.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KoncarTaskTriangles.Models.TriangleModel", b =>
                {
                    b.HasOne("KoncarTaskTriangles.Models.UserModel", "User")
                        .WithMany("Triangles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoncarTaskTriangles.Models.UserModel", b =>
                {
                    b.Navigation("Triangles");
                });
#pragma warning restore 612, 618
        }
    }
}
